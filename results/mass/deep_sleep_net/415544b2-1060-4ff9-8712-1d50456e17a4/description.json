{
    "metadata": {
        "git_branch": "dreem-learning-open",
        "git_hash": "20db8300900bdc6ef3577770f44113d899574789",
        "begin": 1582014522,
        "end": 1582018118,
        "experiment_id": "415544b2-1060-4ff9-8712-1d50456e17a4"
    },
    "dataset_settings": {
        "h5_directory": "/data/h5/mass/",
        "memmap_directory": "/data/memmap/mass/"
    },
    "memmap_description": {
        "signals": [
            {
                "name": "signals",
                "signals": [
                    {
                        "signals": [
                            "signals/eeg/c4",
                            "signals/eeg/o1"
                        ],
                        "processings": [
                            {
                                "type": "weighted_sum",
                                "args": {
                                    "weights": [
                                        1,
                                        -1
                                    ]
                                }
                            },
                            {
                                "type": "filter",
                                "args": {}
                            },
                            {
                                "type": "resample",
                                "args": {
                                    "target_frequency": 100
                                }
                            }
                        ]
                    },
                    {
                        "signals": [
                            "signals/eeg/f4",
                            "signals/eog/left horiz"
                        ],
                        "processings": [
                            {
                                "type": "weighted_sum",
                                "args": {
                                    "weights": [
                                        1,
                                        -1
                                    ]
                                }
                            },
                            {
                                "type": "filter",
                                "args": {}
                            },
                            {
                                "type": "resample",
                                "args": {
                                    "target_frequency": 100
                                }
                            }
                        ]
                    },
                    {
                        "signals": [
                            "signals/eeg/f8",
                            "signals/eeg/cz"
                        ],
                        "processings": [
                            {
                                "type": "weighted_sum",
                                "args": {
                                    "weights": [
                                        1,
                                        -1
                                    ]
                                }
                            },
                            {
                                "type": "filter",
                                "args": {}
                            },
                            {
                                "type": "resample",
                                "args": {
                                    "target_frequency": 100
                                }
                            }
                        ]
                    },
                    {
                        "signals": [
                            "signals/eog/right horiz",
                            "signals/eog/left horiz"
                        ],
                        "processings": [
                            {
                                "type": "weighted_sum",
                                "args": {
                                    "weights": [
                                        0.5,
                                        0.5
                                    ]
                                }
                            },
                            {
                                "type": "filter",
                                "args": {}
                            },
                            {
                                "type": "resample",
                                "args": {
                                    "target_frequency": 100
                                }
                            }
                        ]
                    },
                    {
                        "signals": [
                            "signals/emg/chin1",
                            "signals/emg/chin2"
                        ],
                        "processings": [
                            {
                                "type": "weighted_sum",
                                "args": {
                                    "weights": [
                                        0.5,
                                        0.5
                                    ]
                                }
                            },
                            {
                                "type": "filter",
                                "args": {}
                            },
                            {
                                "type": "resample",
                                "args": {
                                    "target_frequency": 100
                                }
                            }
                        ]
                    }
                ],
                "processings": [
                    {
                        "type": "padding",
                        "args": {
                            "padding_duration": 900,
                            "value": 0
                        }
                    }
                ]
            }
        ],
        "features": []
    },
    "groups_description": {
        "signals": {
            "fs": 100,
            "padding": 900,
            "shape": [
                3000,
                5
            ],
            "window_length": 3000
        }
    },
    "features_description": {},
    "dataset_parameters": {
        "split": {
            "train": [
                "/data/memmap/mass/e13e7ba9f3/01-03-0055 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0026 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0003 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0021 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0036 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0024 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0061 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0001 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0011 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0042 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0018 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0041 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0056 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0032 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0047 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0031 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0060 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0053 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0057 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0016 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0006 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0020 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0017 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0035 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0027 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0022 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0005 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0010 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0008 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0015 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0040 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0004 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0023 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0052 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0050 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0014 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0029 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0039 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0019 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0025 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0054 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0038 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0013 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0045 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0030 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0044 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0009 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0028 PSG/"
            ],
            "val": [
                "/data/memmap/mass/e13e7ba9f3/01-03-0033 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0063 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0002 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0034 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0051 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0058 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0046 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0048 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0062 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0007 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0059 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0012 PSG/"
            ],
            "test": [
                "/data/memmap/mass/e13e7ba9f3/01-03-0037 PSG/",
                "/data/memmap/mass/e13e7ba9f3/01-03-0064 PSG/"
            ]
        },
        "temporal_context": 21,
        "temporal_context_mode": "sequential",
        "transform_parameters": null
    },
    "normalization_parameters": {
        "signals": [
            {
                "name": "signals",
                "normalization": [
                    {
                        "type": "standardization",
                        "args": {}
                    }
                ]
            }
        ],
        "features": []
    },
    "trainers_parameters": {
        "type": "base",
        "args": {
            "epochs": 100,
            "patience": 15,
            "optimizer": {
                "type": "adam",
                "args": {
                    "lr": 0.001
                }
            },
            "regularization": [
                {
                    "type": "L2",
                    "args": {
                        "lambda_reg": 0.0001,
                        "exclusions": [
                            "bn",
                            "bias"
                        ]
                    }
                }
            ]
        }
    },
    "net_parameters": {
        "n_class": 5,
        "type": "modulo_net",
        "output_mode": "many",
        "eval_output_mode": "many",
        "encoders": {
            "signals": {
                "type": "DeepSleepEpochEncoder",
                "args": {}
            }
        },
        "reducer": {
            "type": "FlattenReducer",
            "args": {}
        },
        "sequence_encoder": {
            "type": "DeepSleepNetResidualSequenceEncoder",
            "args": {
                "cells": 512,
                "dropout": 0.5,
                "bidir": true,
                "layers": 2
            }
        }
    },
    "performance_on_test_set": {
        "accuracy": 0.8920454545454546,
        "cohen_kappa": 0.836105145650302,
        "f1": 0.8891454760930159
    },
    "performance_per_records": {
        "01-03-0037 PSG": {
            "accuracy": 0.9034749034749034,
            "cohen_kappa": 0.8680777424485331,
            "f1": 0.9028194817774532
        },
        "01-03-0064 PSG": {
            "accuracy": 0.8788888888888889,
            "cohen_kappa": 0.7993011342247828,
            "f1": 0.8734051762162635
        }
    },
    "records_split": {
        "train_records": [
            "01-03-0055 PSG",
            "01-03-0026 PSG",
            "01-03-0003 PSG",
            "01-03-0021 PSG",
            "01-03-0036 PSG",
            "01-03-0024 PSG",
            "01-03-0061 PSG",
            "01-03-0001 PSG",
            "01-03-0011 PSG",
            "01-03-0042 PSG",
            "01-03-0018 PSG",
            "01-03-0041 PSG",
            "01-03-0056 PSG",
            "01-03-0032 PSG",
            "01-03-0047 PSG",
            "01-03-0031 PSG",
            "01-03-0060 PSG",
            "01-03-0053 PSG",
            "01-03-0057 PSG",
            "01-03-0016 PSG",
            "01-03-0006 PSG",
            "01-03-0020 PSG",
            "01-03-0017 PSG",
            "01-03-0035 PSG",
            "01-03-0027 PSG",
            "01-03-0022 PSG",
            "01-03-0005 PSG",
            "01-03-0010 PSG",
            "01-03-0008 PSG",
            "01-03-0015 PSG",
            "01-03-0040 PSG",
            "01-03-0004 PSG",
            "01-03-0023 PSG",
            "01-03-0052 PSG",
            "01-03-0050 PSG",
            "01-03-0014 PSG",
            "01-03-0029 PSG",
            "01-03-0039 PSG",
            "01-03-0019 PSG",
            "01-03-0025 PSG",
            "01-03-0054 PSG",
            "01-03-0038 PSG",
            "01-03-0013 PSG",
            "01-03-0045 PSG",
            "01-03-0030 PSG",
            "01-03-0044 PSG",
            "01-03-0009 PSG",
            "01-03-0028 PSG"
        ],
        "validation_records": [
            "01-03-0033 PSG",
            "01-03-0063 PSG",
            "01-03-0002 PSG",
            "01-03-0034 PSG",
            "01-03-0051 PSG",
            "01-03-0058 PSG",
            "01-03-0046 PSG",
            "01-03-0048 PSG",
            "01-03-0062 PSG",
            "01-03-0007 PSG",
            "01-03-0059 PSG",
            "01-03-0012 PSG"
        ],
        "test_records": [
            "01-03-0037 PSG",
            "01-03-0064 PSG"
        ]
    }
}